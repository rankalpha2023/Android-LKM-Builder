name: Build Android LKM

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Android LKM by ${{ github.actor }}
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git ccache automake python3 flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler 

      - name: Clone Kernel Source
        run: |
          mkdir -p $GITHUB_WORKSPACE/kernel
          cd $GITHUB_WORKSPACE
          git clone https://github.com/ArrowOS-Devices/android_kernel_xiaomi_sdm660 --depth=1 -b arrow-13.1 kernel

      - name: Clone LKM Source
        run: |
          cd $GITHUB_WORKSPACE/kernel
          git submodule add https://github.com/rankalpha2023/hardware-breakpoint.git
          git submodule update --init --recursive

      - name: Download Clang-aosp
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://gitlab.com/ThankYouMario/android_prebuilts_clang-standalone/ -b 18 clang-aosp --depth=1
          
      - name: Download Gcc-aosp-64
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p gcc-64
          wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-10.0.0_r47.tar.gz
          tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
          export GCC_64=CROSS_COMPILE=$GITHUB_WORKSPACE/gcc-64/bin/aarch64-linux-android-

      - name: Download Gcc-aosp-32
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p gcc-32
          wget -O gcc-arm.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+archive/refs/tags/android-10.0.0_r47.tar.gz
          tar -C gcc-32/ -zxvf gcc-arm.tar.gz
          export GCC_32=CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/gcc-32/bin/arm-linux-androideabi-

      - name: Build Android LKM for ARM64
        run: |
          cd $GITHUB_WORKSPACE/kernel
          export PATH=$GITHUB_WORKSPACE/clang-aosp/bin:$GITHUB_WORKSPACE/gcc-64:$GITHUB_WORKSPACE/gcc-32:$PATH
          make -j$(nproc --all) CC=clang O=out ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- KCFLAGS="-Wno-error=strict-prototypes" CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- lavender_defconfig
          make -j$(nproc --all) CC=clang O=out ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- KCFLAGS="-Wno-error=strict-prototypes" CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi-

      - name: Upload Kernel Modules
        uses: actions/upload-artifact@main
        with:
          name: hw-break
          path: $GITHUB_WORKSPACE/kernel/hardware-breakpoint/*.ko
